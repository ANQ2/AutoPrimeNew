const express = require("express");
const router = express.Router();
const Order = require("../models/Order");

// üîπ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–∫–∞–∑—ã (–º–µ–Ω–µ–¥–∂–µ—Ä/–∞–¥–º–∏–Ω)
router.get("/", async (req, res) => {
    try {
        const orders = await Order.find()
            .populate("car_id")
            .populate("client_id");
        res.json(orders);
    } catch (err) {
        res.status(500).json({ error: err.message });
    }
});

// üîπ –ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
router.get("/client/:id", async (req, res) => {
    try {
        const orders = await Order.find({ client_id: req.params.id }).populate("car_id");
        res.json(orders);
    } catch (err) {
        res.status(500).json({ error: err.message });
    }
});

// üîπ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑
router.post("/", async (req, res) => {
    try {
        const { client_id, car_id } = req.body;
        const newOrder = new Order({ client_id, car_id });
        const saved = await newOrder.save();
        res.status(201).json(saved);
    } catch (err) {
        res.status(400).json({ error: err.message });
    }
});

// üîπ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
router.put("/:id/status", async (req, res) => {
    try {
        const { status } = req.body;

        if (!["–≤ –æ–∂–∏–¥–∞–Ω–∏–∏", "–∑–∞–≤–µ—Ä—à—ë–Ω", "–æ—Ç–º–µ–Ω—ë–Ω"].includes(status)) {
            return res.status(400).json({ error: "–ù–µ–≤–µ—Ä–Ω—ã–π —Å—Ç–∞—Ç—É—Å" });
        }

        const updated = await Order.findByIdAndUpdate(
            req.params.id,
            { status },
            { new: true }
        ).populate("car_id client_id");

        res.json(updated);
    } catch (err) {
        res.status(400).json({ error: err.message });
    }
});

module.exports = router;
